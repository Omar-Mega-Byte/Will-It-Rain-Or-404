# Spring Boot application.yaml for MySQL database
spring:
    datasource:
        url: ${JDBC_URL:jdbc:mysql://localhost:3306/weather_app?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
        username: ${MYSQL_USER:root}
        password: ${MYSQL_PASSWORD:}
        driver-class-name: com.mysql.cj.jdbc.Driver
    jpa:
        hibernate:
            ddl-auto: update
        show-sql: true
        database-platform: org.hibernate.dialect.MySQLDialect
        properties:
            hibernate:
                '[format_sql]': true
                dialect: org.hibernate.dialect.MySQLDialect
                jdbc:
                    '[batch_size]': 20
                '[order_inserts]': true
                '[order_updates]': true
    profiles:
        active: ${SPRING_PROFILES_ACTIVE:default}
    
    mail:
        host: ${MAIL_HOST:localhost}
        port: ${MAIL_PORT:587}
        username: ${MAIL_USERNAME:}
        password: ${MAIL_PASSWORD:}
        properties:
            mail:
                smtp:
                    auth: ${MAIL_SMTP_AUTH:true}
                    starttls:
                        enable: ${MAIL_SMTP_STARTTLS_ENABLE:true}
                        required: ${MAIL_SMTP_STARTTLS_REQUIRED:false}
                    connectiontimeout: ${MAIL_SMTP_CONNECTION_TIMEOUT:5000}
                    timeout: ${MAIL_SMTP_TIMEOUT:5000}
                    writetimeout: ${MAIL_SMTP_WRITE_TIMEOUT:5000}
                debug: ${MAIL_DEBUG:false}

server:
    port: ${SERVER_PORT:8080}
    servlet:
        context-path: ${SERVER_CONTEXT_PATH:/}

logging:
    level:
        root: INFO
        '[org.springframework.web]': DEBUG
        '[org.hibernate]': ERROR
        '[com.weather_found.weather_app.modules.weather]': DEBUG

# JWT Configuration
app:
    jwt:
        secret: ${JWT_SECRET:mySecretKeyForJWTTokenGenerationThatShouldBeAtLeast256BitsLong}
        expirationMs: ${JWT_EXPIRATION_MS:86400000} # 24 hours

# Weather Module Configuration
weather:
    api:
        openweathermap:
            key: ${OPENWEATHERMAP_API_KEY:a1ff2e2ee5c0afe84d8a8a6db035745c}
            url: ${OPENWEATHERMAP_API_URL:https://api.openweathermap.org/data/2.5}
        nasa:
            key: ${NASA_API_KEY:DEMO_KEY}
            url: ${NASA_API_URL:https://power.larc.nasa.gov/api}
        timeout: ${WEATHER_API_TIMEOUT:5000}
        max-retries: ${WEATHER_API_MAX_RETRIES:3}
        retry-delay: ${WEATHER_API_RETRY_DELAY:1000}
    
    rate-limiting:
        enabled: ${WEATHER_RATE_LIMITING_ENABLED:true}
        default-limit: ${WEATHER_RATE_LIMIT_DEFAULT:60} # per minute
        dashboard-limit: ${WEATHER_RATE_LIMIT_DASHBOARD:30}
        search-limit: ${WEATHER_RATE_LIMIT_SEARCH:20}
        api-limit: ${WEATHER_RATE_LIMIT_API:100}
    
    security:
        input-validation: ${WEATHER_SECURITY_INPUT_VALIDATION:true}
        suspicious-activity-logging: ${WEATHER_SECURITY_SUSPICIOUS_LOGGING:true}
        max-block-duration: ${WEATHER_SECURITY_MAX_BLOCK_DURATION:60} # minutes
    
    async:
        core-pool-size: ${WEATHER_ASYNC_CORE_POOL_SIZE:10}
        max-pool-size: ${WEATHER_ASYNC_MAX_POOL_SIZE:20}
        queue-capacity: ${WEATHER_ASYNC_QUEUE_CAPACITY:500}
    
    data:
        retention-days: ${WEATHER_DATA_RETENTION_DAYS:365}
        alert-retention-days: ${WEATHER_ALERT_RETENTION_DAYS:30}
        log-retention-days: ${WEATHER_LOG_RETENTION_DAYS:7}
